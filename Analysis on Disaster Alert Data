{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "tags": []
   },
   "source": [
    "# Research on the Korean government's policy in response to COVID-19\n",
    "## Analysis on Disaster Alert Data (Text Analysis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from tqdm import tqdm\n",
    "import re\n",
    "from collections import Counter\n",
    "from pathlib import Path\n",
    "PATH_DATA = Path.cwd().parent / 'ra_work' / 'file' "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.font_manager as fm\n",
    "import seaborn as sns\n",
    "\n",
    "mpl.rcParams['axes.unicode_minus'] = False\n",
    "palette = sns.color_palette(\"bright\")\n",
    "plt.rcParams[\"font.family\"] = 'Nanum Gothic TTF'\n",
    "plt.rcParams[\"font.size\"] = 20\n",
    "plt.rcParams[\"figure.figsize\"] = (14,4)\n",
    "path = 'NanumGothic.ttf'\n",
    "font_name = fm.FontProperties(fname=path, size=50).get_name()\n",
    "plt.rc('font', family=font_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(PATH_DATA / \"ds_msg.csv\", index_col = \"Unnamed: 0\") \n",
    "df_loc = pd.read_csv(PATH_DATA / \"location.csv\") # Local Government Number\n",
    "df_cf = pd.read_csv(PATH_DATA / \"kr_daily.csv\") # Daily Confirmed Cases\n",
    "df_cfreg = pd.read_csv(PATH_DATA / \"kr_regional_daily.csv\") # Number of Confirmed Cases by Region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_cf['date'] = pd.to_datetime(df_cf['date'], format = \"%Y%m%d\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[('2020-04-01'<=df['create_date'])&(df['create_date']<'2020-07-01')]\n",
    "df_cf = df_cf[('2020-04-01'<=df_cf['date'])&(df_cf['date']<'2020-07-01')]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. Creating Variables from Disaster Alert Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exclude Messages Not Related to COVID-19"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[~df.msg.str.contains('대북')]\n",
    "df = df[~df.msg.str.contains('북한')]\n",
    "df = df[~df.msg.str.contains('돼지열병')]\n",
    "df = df[~df.msg.str.contains('강풍')]\n",
    "df = df[~df.msg.str.contains('돌풍')]\n",
    "df = df[~df.msg.str.contains('환경부')]\n",
    "df = df[~df.msg.str.contains('강한바람')]\n",
    "df = df[~df.msg.str.contains('결빙')]\n",
    "df = df[~df.msg.str.contains('화재')]\n",
    "df = df[~df.msg.str.contains('행정안전부')]\n",
    "df = df[~df.msg.str.contains('수자원공사')]\n",
    "df = df[~df.msg.str.contains('호우')]\n",
    "df = df[~df.msg.str.contains('한국철도공사')]\n",
    "df = df[~df.msg.str.contains('풍랑주의보')]\n",
    "df = df[~df.msg.str.contains('산불')]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Make Variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Variable Indicating Whether Demo Demographic Information is Included\n",
    "df['demo']=df.msg.str.contains('\\d대[^응|\\s?수칙]|년생|\\d세|여\\/\\d|남\\/\\d', regex = True).astype(int) \n",
    "# Variable Indicating Whether Mobility Movement Patterns are Specifically Included\n",
    "df['mob'] = (df.msg.str.contains('\\d:|\\→|\\d시\\d\\d?분?|[^어제\\s]\\d\\d시', regex = True)&(~df.msg.str.contains('확진자\\s?없음', regex = True))).astype(int)\n",
    "# Variable Indicating Whether Website URLs are Included\n",
    "df['web'] = df.msg.str.contains('[a-z]', regex = True).astype(int)\n",
    "# Variable Indicating Group Infection Status\n",
    "#For group infections, phrases like “If you visited ~, please get tested” are common. I created this variable by conducting a frequency analysis of visit-related keywords and using the most frequently occurring terms.\n",
    "df['mass']=df.msg.str.contains('이태원.+?클럽|구로구.+?콜센터|신천지', regex=True).astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.sort_values(by=['location_id'], axis=0)\n",
    "df1 = df.groupby(['create_date', 'location_id']).sum()\n",
    "df1 = df1.unstack('location_id').fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"10\" halign=\"left\">demo</th>\n",
       "      <th>...</th>\n",
       "      <th colspan=\"10\" halign=\"left\">mass</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>location_id</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>...</th>\n",
       "      <th>242</th>\n",
       "      <th>243</th>\n",
       "      <th>244</th>\n",
       "      <th>245</th>\n",
       "      <th>246</th>\n",
       "      <th>248</th>\n",
       "      <th>249</th>\n",
       "      <th>250</th>\n",
       "      <th>6406</th>\n",
       "      <th>6474</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>create_date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-04-01</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-02</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-03</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-04</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-05</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-26</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-27</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-28</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-29</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-30</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>91 rows × 956 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            demo                                               ... mass       \\\n",
       "location_id 2    3    4    5    6    7    8    9    10   11    ... 242  243    \n",
       "create_date                                                    ...             \n",
       "2020-04-01   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0  ...  0.0  0.0   \n",
       "2020-04-02   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-04-03   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-04-04   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-04-05   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "...          ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   \n",
       "2020-06-26   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-27   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-28   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-29   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-30   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "\n",
       "                                                     \n",
       "location_id 244  245  246  248  249  250  6406 6474  \n",
       "create_date                                          \n",
       "2020-04-01   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-04-02   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-04-03   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-04-04   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-04-05   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "...          ...  ...  ...  ...  ...  ...  ...  ...  \n",
       "2020-06-26   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-06-27   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-06-28   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-06-29   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-06-30   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "\n",
       "[91 rows x 956 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1.demo.to_csv('var1_demographicinfo.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1.mob.to_csv('var2_specificmob.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1.web.to_csv('var3_homepage.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1.mass.to_csv('var4_massinfection.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Organizing the Table"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create Daily Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['create_date'] = pd.to_datetime(df['create_date'], format = \"%Y-%m-%d\")\n",
    "df = df.set_index('create_date')\n",
    "df_cf = df_cf.set_index('date')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "dfday = pd.DataFrame([df.demo.resample('1D').sum(), df.mob.resample('1D').sum(), df.web.resample('1D').sum(), df.mass.resample('1D').sum()]).T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "freq = pd.DataFrame.from_dict(Counter(df.create_date), orient='index')\n",
    "dfday = pd.concat([freq, dfday, df_cf.daily], axis =1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "dfday.columns = ['freq', 'demo', 'mob', 'web', 'mass', 'confirmed']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_cf = df_cf.reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create Seoul Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_loc[df_loc.location_name.str.contains('서울')].location_id.to_list() #26개"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_seoul = df[(136<=df['location_id'])&(df['location_id']<=161)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_count = pd.DataFrame(df_seoul.groupby(['create_date','location_id']).size())\n",
    "df_count.columns = ['count']\n",
    "df_count = df_count.unstack()\n",
    "df_count = df_count.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"21\" halign=\"left\">count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>location_id</th>\n",
       "      <th>136</th>\n",
       "      <th>137</th>\n",
       "      <th>138</th>\n",
       "      <th>139</th>\n",
       "      <th>140</th>\n",
       "      <th>141</th>\n",
       "      <th>142</th>\n",
       "      <th>143</th>\n",
       "      <th>144</th>\n",
       "      <th>145</th>\n",
       "      <th>...</th>\n",
       "      <th>152</th>\n",
       "      <th>153</th>\n",
       "      <th>154</th>\n",
       "      <th>155</th>\n",
       "      <th>156</th>\n",
       "      <th>157</th>\n",
       "      <th>158</th>\n",
       "      <th>159</th>\n",
       "      <th>160</th>\n",
       "      <th>161</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>create_date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-04-01</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-02</th>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-03</th>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-04</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-05</th>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-26</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-27</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-28</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-29</th>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-30</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>89 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            count                                               ...            \\\n",
       "location_id   136  137  138  139  140  141  142  143  144  145  ...  152  153   \n",
       "create_date                                                     ...             \n",
       "2020-04-01    5.0  3.0  0.0  0.0  1.0  1.0  1.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-04-02    2.0  3.0  0.0  0.0  0.0  2.0  1.0  0.0  0.0  0.0  ...  1.0  0.0   \n",
       "2020-04-03    4.0  4.0  2.0  0.0  0.0  2.0  0.0  2.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-04-04    1.0  5.0  0.0  0.0  1.0  1.0  0.0  0.0  1.0  0.0  ...  0.0  1.0   \n",
       "2020-04-05    3.0  5.0  0.0  0.0  1.0  2.0  0.0  0.0  0.0  0.0  ...  0.0  1.0   \n",
       "...           ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   \n",
       "2020-06-26    2.0  1.0  0.0  0.0  0.0  1.0  1.0  1.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-27    1.0  2.0  0.0  0.0  0.0  3.0  0.0  1.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-28    1.0  1.0  0.0  0.0  0.0  1.0  0.0  1.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-29    2.0  0.0  0.0  0.0  2.0  2.0  0.0  0.0  1.0  0.0  ...  0.0  0.0   \n",
       "2020-06-30    1.0  0.0  0.0  0.0  0.0  2.0  0.0  0.0  1.0  0.0  ...  0.0  0.0   \n",
       "\n",
       "                                                     \n",
       "location_id  154  155  156  157  158  159  160  161  \n",
       "create_date                                          \n",
       "2020-04-01   1.0  2.0  1.0  0.0  0.0  1.0  0.0  0.0  \n",
       "2020-04-02   1.0  1.0  2.0  2.0  1.0  1.0  0.0  1.0  \n",
       "2020-04-03   1.0  0.0  1.0  1.0  1.0  0.0  0.0  0.0  \n",
       "2020-04-04   1.0  0.0  1.0  1.0  1.0  0.0  0.0  1.0  \n",
       "2020-04-05   1.0  0.0  2.0  2.0  1.0  0.0  0.0  0.0  \n",
       "...          ...  ...  ...  ...  ...  ...  ...  ...  \n",
       "2020-06-26   0.0  0.0  0.0  0.0  1.0  1.0  0.0  1.0  \n",
       "2020-06-27   0.0  1.0  1.0  1.0  0.0  0.0  0.0  1.0  \n",
       "2020-06-28   1.0  0.0  1.0  1.0  0.0  0.0  0.0  0.0  \n",
       "2020-06-29   1.0  0.0  0.0  0.0  0.0  2.0  0.0  0.0  \n",
       "2020-06-30   0.0  0.0  0.0  0.0  1.0  0.0  0.0  0.0  \n",
       "\n",
       "[89 rows x 26 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_seoul = df_seoul.groupby(['create_date', 'location_id']).sum()\n",
    "df_seoul = df_seoul.unstack('location_id').fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"10\" halign=\"left\">demo</th>\n",
       "      <th>...</th>\n",
       "      <th colspan=\"10\" halign=\"left\">mass</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>location_id</th>\n",
       "      <th>136</th>\n",
       "      <th>137</th>\n",
       "      <th>138</th>\n",
       "      <th>139</th>\n",
       "      <th>140</th>\n",
       "      <th>141</th>\n",
       "      <th>142</th>\n",
       "      <th>143</th>\n",
       "      <th>144</th>\n",
       "      <th>145</th>\n",
       "      <th>...</th>\n",
       "      <th>152</th>\n",
       "      <th>153</th>\n",
       "      <th>154</th>\n",
       "      <th>155</th>\n",
       "      <th>156</th>\n",
       "      <th>157</th>\n",
       "      <th>158</th>\n",
       "      <th>159</th>\n",
       "      <th>160</th>\n",
       "      <th>161</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>create_date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-04-01</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-02</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-03</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-04</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-05</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-26</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-27</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-28</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-29</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-06-30</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>89 rows × 104 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            demo                                               ... mass       \\\n",
       "location_id  136  137  138  139  140  141  142  143  144  145  ...  152  153   \n",
       "create_date                                                    ...             \n",
       "2020-04-01   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-04-02   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-04-03   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-04-04   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-04-05   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "...          ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   \n",
       "2020-06-26   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-27   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-28   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n",
       "2020-06-29   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0  0.0  ...  0.0  0.0   \n",
       "2020-06-30   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0  0.0  ...  0.0  0.0   \n",
       "\n",
       "                                                     \n",
       "location_id  154  155  156  157  158  159  160  161  \n",
       "create_date                                          \n",
       "2020-04-01   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-04-02   0.0  1.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-04-03   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-04-04   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-04-05   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "...          ...  ...  ...  ...  ...  ...  ...  ...  \n",
       "2020-06-26   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-06-27   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-06-28   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-06-29   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "2020-06-30   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  \n",
       "\n",
       "[89 rows x 104 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_seoul"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = pd.merge(df_seoul, df_count, left_index=True, right_index=True, how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = df2.stack().reset_index()\n",
    "df2.columns = ['date', 'location_id', 'count', 'demo', 'mass', 'mob', 'web']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>location_id</th>\n",
       "      <th>count</th>\n",
       "      <th>demo</th>\n",
       "      <th>mass</th>\n",
       "      <th>mob</th>\n",
       "      <th>web</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>136</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>137</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>138</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>139</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>140</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2309</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>157</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2310</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>158</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2311</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>159</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2312</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>160</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2313</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>161</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2314 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  location_id  count  demo  mass  mob  web\n",
       "0    2020-04-01          136    5.0   0.0   0.0  1.0  0.0\n",
       "1    2020-04-01          137    3.0   0.0   0.0  0.0  3.0\n",
       "2    2020-04-01          138    0.0   0.0   0.0  0.0  0.0\n",
       "3    2020-04-01          139    0.0   0.0   0.0  0.0  0.0\n",
       "4    2020-04-01          140    1.0   0.0   0.0  0.0  1.0\n",
       "...         ...          ...    ...   ...   ...  ...  ...\n",
       "2309 2020-06-30          157    0.0   0.0   0.0  0.0  0.0\n",
       "2310 2020-06-30          158    1.0   0.0   0.0  0.0  1.0\n",
       "2311 2020-06-30          159    0.0   0.0   0.0  0.0  0.0\n",
       "2312 2020-06-30          160    0.0   0.0   0.0  0.0  0.0\n",
       "2313 2020-06-30          161    0.0   0.0   0.0  0.0  0.0\n",
       "\n",
       "[2314 rows x 7 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "df3 = pd.read_csv('textmeasure_junseok.csv', index_col = 'Unnamed: 0') #text_analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "df3 = df3.drop(['s'], axis =1) \n",
    "df3 = df3.groupby(['dat', 'rgn']).sum()\n",
    "df3 = df3.unstack('rgn').fillna(0)\n",
    "df3 = df3.stack().reset_index()\n",
    "df3.columns = ['date', 'location_id', 'novelty', 'remoteness', 'severity']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>location_id</th>\n",
       "      <th>novelty</th>\n",
       "      <th>remoteness</th>\n",
       "      <th>severity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>136</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.176803</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>137</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.262487</td>\n",
       "      <td>-4.824178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>138</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>139</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>140</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.526911</td>\n",
       "      <td>7.190746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2309</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>157</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2310</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>158</td>\n",
       "      <td>0.74972</td>\n",
       "      <td>0.323760</td>\n",
       "      <td>-3.945372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2311</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>159</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2312</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>160</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2313</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>161</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2314 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  location_id  novelty  remoteness  severity\n",
       "0     2020-04-01          136  0.00000    0.176803  0.000000\n",
       "1     2020-04-01          137  0.00000    0.262487 -4.824178\n",
       "2     2020-04-01          138  0.00000    0.000000  0.000000\n",
       "3     2020-04-01          139  0.00000    0.000000  0.000000\n",
       "4     2020-04-01          140  0.00000    0.526911  7.190746\n",
       "...          ...          ...      ...         ...       ...\n",
       "2309  2020-06-30          157  0.00000    0.000000  0.000000\n",
       "2310  2020-06-30          158  0.74972    0.323760 -3.945372\n",
       "2311  2020-06-30          159  0.00000    0.000000  0.000000\n",
       "2312  2020-06-30          160  0.00000    0.000000  0.000000\n",
       "2313  2020-06-30          161  0.00000    0.000000  0.000000\n",
       "\n",
       "[2314 rows x 5 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Merge with COVID-19 Case Numbers to Create a Dataset of 2,366 Rows (26 Location IDs * 91 Days)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "confirmed = pd.read_csv('seoul_confirmed_count.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "confirmed.columns = ['date', 'location_id', 'confirmed']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "keydf = pd.DataFrame(index = pd.date_range('2020-04-01','2020-06-30'), columns = [136]).unstack().reset_index().drop(0,axis=1)\n",
    "keydf.columns = ['location_id', 'date']\n",
    "keydf['date']=pd.to_datetime(keydf['date'], format='%Y-%m-%d').dt.date\n",
    "#location_id =136은 서울 전체라 확진자 수가 없어서 따로 df추가"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "confirmed_new = pd.concat([confirmed, keydf]).fillna(0).sort_values(by = ['location_id', 'date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>location_id</th>\n",
       "      <th>confirmed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>136</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-04-02</td>\n",
       "      <td>136</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-04-03</td>\n",
       "      <td>136</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-04-04</td>\n",
       "      <td>136</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-04-05</td>\n",
       "      <td>136</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2174</th>\n",
       "      <td>2020-06-26</td>\n",
       "      <td>161</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2199</th>\n",
       "      <td>2020-06-27</td>\n",
       "      <td>161</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2224</th>\n",
       "      <td>2020-06-28</td>\n",
       "      <td>161</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2249</th>\n",
       "      <td>2020-06-29</td>\n",
       "      <td>161</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2274</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>161</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2366 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  location_id  confirmed\n",
       "0     2020-04-01          136        0.0\n",
       "1     2020-04-02          136        0.0\n",
       "2     2020-04-03          136        0.0\n",
       "3     2020-04-04          136        0.0\n",
       "4     2020-04-05          136        0.0\n",
       "...          ...          ...        ...\n",
       "2174  2020-06-26          161        1.0\n",
       "2199  2020-06-27          161        0.0\n",
       "2224  2020-06-28          161        0.0\n",
       "2249  2020-06-29          161        0.0\n",
       "2274  2020-06-30          161        0.0\n",
       "\n",
       "[2366 rows x 3 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confirmed_new # key table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Standardize Date Format for Merging\n",
    "df2['date'] = pd.to_datetime(df2['date'], format = \"%Y-%m-%d\")\n",
    "df3['date'] = pd.to_datetime(df3['date'], format = \"%Y-%m-%d\")\n",
    "confirmed_new['date'] = pd.to_datetime(confirmed_new['date'], format = \"%Y-%m-%d\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "dftmp = pd.merge(left = df3, right = confirmed_new, on = ['date', 'location_id'], how = 'right', sort = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "dffinal = pd.merge(left = dftmp, right = df2, how= 'left',on=['date', 'location_id'], sort = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>location_id</th>\n",
       "      <th>novelty</th>\n",
       "      <th>remoteness</th>\n",
       "      <th>severity</th>\n",
       "      <th>confirmed</th>\n",
       "      <th>count</th>\n",
       "      <th>demo</th>\n",
       "      <th>mass</th>\n",
       "      <th>mob</th>\n",
       "      <th>web</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>136</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.176803</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>137</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.262487</td>\n",
       "      <td>-4.824178</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>138</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>139</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-04-01</td>\n",
       "      <td>140</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.526911</td>\n",
       "      <td>7.190746</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2361</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>157</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2362</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>158</td>\n",
       "      <td>0.74972</td>\n",
       "      <td>0.323760</td>\n",
       "      <td>-3.945372</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2363</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>159</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2364</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>160</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2365</th>\n",
       "      <td>2020-06-30</td>\n",
       "      <td>161</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2366 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  location_id  novelty  remoteness  severity  confirmed  count  \\\n",
       "0    2020-04-01          136  0.00000    0.176803  0.000000        0.0    5.0   \n",
       "1    2020-04-01          137  0.00000    0.262487 -4.824178        0.0    3.0   \n",
       "2    2020-04-01          138  0.00000    0.000000  0.000000        0.0    0.0   \n",
       "3    2020-04-01          139  0.00000    0.000000  0.000000        0.0    0.0   \n",
       "4    2020-04-01          140  0.00000    0.526911  7.190746        0.0    1.0   \n",
       "...         ...          ...      ...         ...       ...        ...    ...   \n",
       "2361 2020-06-30          157  0.00000    0.000000  0.000000        0.0    0.0   \n",
       "2362 2020-06-30          158  0.74972    0.323760 -3.945372        0.0    1.0   \n",
       "2363 2020-06-30          159  0.00000    0.000000  0.000000        0.0    0.0   \n",
       "2364 2020-06-30          160  0.00000    0.000000  0.000000        0.0    0.0   \n",
       "2365 2020-06-30          161  0.00000    0.000000  0.000000        0.0    0.0   \n",
       "\n",
       "      demo  mass  mob  web  \n",
       "0      0.0   0.0  1.0  0.0  \n",
       "1      0.0   0.0  0.0  3.0  \n",
       "2      0.0   0.0  0.0  0.0  \n",
       "3      0.0   0.0  0.0  0.0  \n",
       "4      0.0   0.0  0.0  1.0  \n",
       "...    ...   ...  ...  ...  \n",
       "2361   0.0   0.0  0.0  0.0  \n",
       "2362   0.0   0.0  0.0  1.0  \n",
       "2363   0.0   0.0  0.0  0.0  \n",
       "2364   0.0   0.0  0.0  0.0  \n",
       "2365   0.0   0.0  0.0  0.0  \n",
       "\n",
       "[2366 rows x 11 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dffinal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 499,
   "metadata": {},
   "outputs": [],
   "source": [
    "dffinal.to_csv('text_measure_final.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Correlation Coefficient Between Daily Confirmed Cases and Disaster Alert Variables\n",
    "- demo : 0.779\n",
    "- mob : 0.849\n",
    "- web : -0.115\n",
    "- mass : 0.286"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 501,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>freq</th>\n",
       "      <th>demo</th>\n",
       "      <th>mob</th>\n",
       "      <th>web</th>\n",
       "      <th>mass</th>\n",
       "      <th>confirmed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.504900</td>\n",
       "      <td>0.562115</td>\n",
       "      <td>0.607337</td>\n",
       "      <td>0.413694</td>\n",
       "      <td>0.597703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>demo</th>\n",
       "      <td>0.504900</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.431723</td>\n",
       "      <td>0.451709</td>\n",
       "      <td>-0.012598</td>\n",
       "      <td>0.710156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mob</th>\n",
       "      <td>0.562115</td>\n",
       "      <td>0.431723</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.169042</td>\n",
       "      <td>0.088400</td>\n",
       "      <td>0.449253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>web</th>\n",
       "      <td>0.607337</td>\n",
       "      <td>0.451709</td>\n",
       "      <td>0.169042</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.050025</td>\n",
       "      <td>0.647460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mass</th>\n",
       "      <td>0.413694</td>\n",
       "      <td>-0.012598</td>\n",
       "      <td>0.088400</td>\n",
       "      <td>0.050025</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.097993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>confirmed</th>\n",
       "      <td>0.597703</td>\n",
       "      <td>0.710156</td>\n",
       "      <td>0.449253</td>\n",
       "      <td>0.647460</td>\n",
       "      <td>-0.097993</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               freq      demo       mob       web      mass  confirmed\n",
       "freq       1.000000  0.504900  0.562115  0.607337  0.413694   0.597703\n",
       "demo       0.504900  1.000000  0.431723  0.451709 -0.012598   0.710156\n",
       "mob        0.562115  0.431723  1.000000  0.169042  0.088400   0.449253\n",
       "web        0.607337  0.451709  0.169042  1.000000  0.050025   0.647460\n",
       "mass       0.413694 -0.012598  0.088400  0.050025  1.000000  -0.097993\n",
       "confirmed  0.597703  0.710156  0.449253  0.647460 -0.097993   1.000000"
      ]
     },
     "execution_count": 501,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfday.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 500,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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IiKzaWho4NChQ9P+LJPJcPLk1C4XH/vYxzh9+jR79uxh7dq1Z653XZfBwcEFr+OOO+7gDW94AydPnuSrX/0qb37zm6etTpssH9b19fXNeruWlhZ6e3uxbXvaUMx1XU6ePHlO+FcKM4V0XmhoaADgV7/6FbFYbNrb5MPE/G0HBwenDRiPHj3q0yrLRzPEPNYe1QwxERERkaqRD8SKqRDLnjQ9vURExHP5QKwtAutjZpNjn+aIiYiIzKqzs5Pnnntu2laHP/zhD3EcZ8p1v/zlL7nhhhumhGEA+/fvJ5VKLXgdr33ta2lububDH/4w+/bt484775zzdy666CLOP/98vv71r896u6uuuopMJsP27dun/fmjjz7K4OAg11xzzYLWXqkuvfRSwFSabdiwYdp/mpqaAPM8ANi9e/c595PJZPjJT35SuoWXiAIxj3VE4KQNKWfu24qIiIhIhSs2EIssAyc10XpRREQ8NblCrC5kKsP2KhATERGZ1a233koymeS+++6bcv3Y2Bgf//jHz7l9fX39tPOzPvKRjxTVSjAajXLbbbdx3333sXHjRrq6uub8HcuyuOeee/j2t7/Nt771rRlvd8MNN7Bx40b+9E//lHQ6PeVn6XSaD3/4w3R1dS245WOluuaaa1i+fDl//ud/jjvHiZlr167liiuu4N577yWbnVrl8+lPf5re3upr/6+WiR5rz/2JHs3ChWrRICIiIhJsXlSIAWROLvw+RERkRn35QCzXeagzBk8s/ER1ERGRRWH9+vW8973v5X3vex8nT57kxhtvJJFI8NGPfpQlS5ZwwQUXTLn9XXfdxbve9S4+8IEPcMsttzA2NsYnP/lJDhw4wLXXXlvUWu68804++9nPFlQdlveBD3yAX/ziF2zdupV3vetdbN26laamJk6cOEEmk+GGG24gFArxuc99juuvv56rr76a97///axbt44DBw7wN3/zN+zfv58f/ehHns4GqwQ1NTV8/vOf541vfCNXX3017373u7nwwgsZHh5m165dpFIpPvKRj5y5/Wc/+1muvfZaXvOa1/D+97+f1tZWHnroIT7zmc+wdetWfvWrX5Xx/8Z7qhDzWEeuZ/lhzRETERERCT7HgxliYAIxERHxXG8W6i1omBSIvZCBEXVtERERmdUnPvEJPvWpT/HQQw9xzTXXcOedd9Ld3c23v/1t4vE4NTUT1R7vfOc7+eQnP8kjjzzCNddcw+23305HRwfbt2+nsbGRTGZiMzwajWJZ1pTfn+66vFQqRTgc5i1veUvBa49EIjzyyCPce++97Ny5k9e97nV0d3ezdetWvve975253ctf/nL27NnDpZdeyj333MOVV17JPffcw/r169mzZw9XXHHFlPutqamZdo35n0Wj0YKvn++fw2yPn/+9mR7n7N95/etfz/bt2znvvPN497vfzcte9jK2bt3K97///TNtEvM2b97M9u3bqampYevWrbzqVa9i165dPProo3R1dc241qCy5iqb80p9fb07Olr9rWKeHYeLD8JXV8DtTeVejYiIiIgU5eT98Nyb4bJnoO7i+f/+8E7YewVc8l1oucH79YmILHJvOgq7UvD8hea/vz0Mrz8Kv1wNV9aWd20iIlKZnnnmGS655JJyL0Ny3v72t9PX18d3voQw6fwAACAASURBVPOdci9FilDo68qyrDHXdetLsKRpqWWix9pzIe2R7Oy3ExEREZEAKLpl4nnmUhViIiK+6M2a+WF5nTFzuXdcgZiIiEil6uvr49ChQ+zdu5evfvWr/PSnPy33kmSRUCDmsfoQNIfUMlFERESkKhQbiEXUMlFExE999kQIBrA6Cg0h2Ks5YiIiIhXrscce49Zbb2XZsmX8wz/8Ay972cvKvSRZJBSI+aA9qgoxERERkapwZobYAjs6hJeAFYOsAjERET/0ZuE1k96iLcsEZHvHy7cmERERmd1NN93E+Lg+rKX0QuVeQDVqj8ARVYiJiIiIBJ89YgKt0LnDiwtiWRBdpgoxEREfjDmQcKDtrFN9N+YCsRKNTBcRERGRgFAg5oOOKBxWhZiIiIhI8NmjC2+XmKdATETEF325790rwlOv74zBkKPv5SIiIiIylQIxH7RH4KQNKafcKxERERGRojgjEF5gu8Q8BWIiIr7ozQdiZ1WI5WeKqW2iiIiIiEymQMwHHbmD8aM6G01EREQk2OwRCKlCTESkEs0UiG3IB2Kp0q5HRESCw1VfXRHPBOn1pEDMB+25ERNHFIiJiIiIBJs9UnzLxIgCMRERP+QDsbNniDWFYU1UFWIiIjK9cDhMJpMp9zJEqkYmkyEcDs99wwqgQMwH7bmD8SN6XxUREREJNi8Csegy03rRUamCiIiX+myIAOdNs//SGVMgJiIi02toaCCR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iIiIiIg0F2PMKGA4EAM+stbe21zHVoaYiIiIiIiIiIiIiIiIJJUxpj2QC5xjrT0POMwYc1BzHV8BMREREREREREREREREUm2E4AF1lrrPn4FOLW5Dq6AmIiIiIiIiIiIiIiIiOxsPmPM0mp/xtXY3hEorPa40H2ueU7eXAcSERERERERERERERERqUPMWtu7nu0FwKHVHme7zzULZYiJiIiIiIiIiIiIiIhIsn0M9DPGGPfxOcCS5jq4MsREREREREREREREREQkqay1xcaYqcDzxpgYsNRa+21zHd9sWZts50pPT7ehUGiXnEtERERERERERERERERaDmNMhbU2PVnnV8lEERERERERERERERERadMUEBMREREREREREREREZE2TQExERERERERERERERERadMUEBMREREREREREREREZE2TQExERERERERERERERERadMUEBMREREREREREREREZE2TQExERERERERERERERERadMUEBMREREREREREREREZE2TQExERERERERERERERERadMUEBMREREREREREREREZE2zVhrd82JjEkAlbvkZCLJ5wNiyW6EiLRI6h9EpDbqG0SkNuobRKQu6h9EpDbqG6SlC1prk5aotcsCYiK7E2PMUmtt72S3Q0RaHvUPIlIb9Q0iUhv1DSJSF/UPIlIb9Q0i9VPJRBEREREREREREREREWnTFBATERERERERERERERGRNk0BMZGd46lkN0BEWiz1DyJSG/UNIlIb9Q0iUhf1DyJSG/UNIvXQGmIiIiIiIiIiIiIiIiLSpilDTERERERERERERERERNo0X7IbILIrGWP+DiSAbOAVa+10Y0w/4GogBKy11l7j7nsX0AlIA/5lrb3fff4I4E6gHKgAxllro7Wc64/A8YAfmGOtnVZtW3vgZWChtfauOtraDZgFPGqtneU+dwBwExAF9gBusdZ+3pTPREQcraV/MMYcC4wDYjj9wJXW2jXuttOBi4AqoNRa+/smfzAiu7mW0DcYY1YDb7q75VlrJ9TR1m7UuHZwn78f2A9oBzxkrV3Q6A9ERIDW0zfUd93gbt8beB24t3q/ISKN10L6h6Pd88XdP5dZa8M1XpuJU1rNAunAFdbaVe4xD3R3SwG6WGsHNcuHI7Iba0V9w5nAeTjXDtnAxdbaEndbN2q53xBpTVQyUXZL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\n",
      "text/plain": [
       "<Figure size 2160x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax1 = plt.subplots(figsize = (30,10))\n",
    "\n",
    "line1 = ax1.plot(dfday.demo, label = 'demo', color = palette[1])\n",
    "line2 = ax1.plot(dfday.mob, label = 'mob', color = palette[2])\n",
    "line3 = ax1.plot(dfday.web, label = 'web', color = palette[3])\n",
    "line4 = ax1.plot(dfday.mass, label = 'mass', color = palette[4])\n",
    "ax2 = ax1.twinx()\n",
    "line5 = ax2.plot(dfday.confirmed, label = 'daily confirmed', color = palette[5])\n",
    "plt.xlim(dfday.index[1], dfday.index[-1])\n",
    "plt.title(\"daily freq\", fontsize = 30)\n",
    "data = line1+line2+line3+line4+line5\n",
    "labels = [l.get_label() for l in data]\n",
    "plt.legend(data, labels, loc='upper right', fontsize =20)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 확진자 수와의 산점도 그리기\n",
    "- 점 하나는 어떤 지역의 어떤 날의 값 (2366개의 점)\n",
    "- y축은 확진자 수\n",
    "- 의미있는 관계가 있는가..?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "dffinal = dffinal.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'mass')"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x1080 with 8 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize = (25,15))\n",
    "ax1 = plt.subplot(331)\n",
    "ax1.scatter(dffinal.novelty, dffinal.confirmed, color = 'blue')\n",
    "plt.title(\"novelty\", fontsize = 20)\n",
    "ax2 = plt.subplot(332)\n",
    "ax2.scatter(dffinal.remoteness, dffinal.confirmed, color = 'blue')\n",
    "plt.title(\"remoteness\", fontsize = 20)\n",
    "ax3 = plt.subplot(333)\n",
    "ax3.scatter(dffinal.severity, dffinal.confirmed, color = 'blue')\n",
    "plt.title(\"severity\", fontsize = 20)\n",
    "ax4 = plt.subplot(334)\n",
    "ax4.scatter(dffinal['count'], dffinal.confirmed, color = 'blue')\n",
    "plt.title(\"count\", fontsize = 20)\n",
    "ax5 = plt.subplot(335)\n",
    "ax5.scatter(dffinal.demo, dffinal.confirmed, color = 'blue')\n",
    "plt.title(\"demo\", fontsize = 20)\n",
    "ax6 = plt.subplot(336)\n",
    "ax6.scatter(dffinal.mob, dffinal.confirmed, color = 'blue')\n",
    "plt.title(\"mob\", fontsize = 20)\n",
    "ax7 = plt.subplot(337)\n",
    "ax7.scatter(dffinal.web, dffinal.confirmed, color = 'blue')\n",
    "plt.title(\"web\", fontsize = 20)\n",
    "ax8 = plt.subplot(338)\n",
    "ax8.scatter(dffinal.web, dffinal.confirmed, color = 'blue')\n",
    "plt.title(\"mass\", fontsize = 20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "#지역별로 다른색으로 그려볼까? 했지만 아무래도 이건 아닌가 같아서 그만뒀습니당"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1b16ad13e80>"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x1080 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize = (25,15))\n",
    "ax1 = plt.subplot(331)\n",
    "plt.scatter(dffinal[dffinal.location_id == 137].novelty, dffinal[dffinal.location_id == 137].confirmed)\n",
    "plt.scatter(dffinal[dffinal.location_id == 138].novelty, dffinal[dffinal.location_id == 138].confirmed)\n",
    "plt.scatter(dffinal[dffinal.location_id == 139].novelty, dffinal[dffinal.location_id == 139].confirmed)\n",
    "plt.scatter(dffinal[dffinal.location_id == 140].novelty, dffinal[dffinal.location_id == 140].confirmed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>location_id</th>\n",
       "      <th>novelty</th>\n",
       "      <th>remoteness</th>\n",
       "      <th>severity</th>\n",
       "      <th>confirmed</th>\n",
       "      <th>count</th>\n",
       "      <th>demo</th>\n",
       "      <th>mass</th>\n",
       "      <th>mob</th>\n",
       "      <th>web</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1648</th>\n",
       "      <td>2020-06-03</td>\n",
       "      <td>146</td>\n",
       "      <td>0.657088</td>\n",
       "      <td>0.297186</td>\n",
       "      <td>3.850024</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1251</th>\n",
       "      <td>2020-05-19</td>\n",
       "      <td>139</td>\n",
       "      <td>0.548224</td>\n",
       "      <td>0.194156</td>\n",
       "      <td>0.483941</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1674</th>\n",
       "      <td>2020-06-04</td>\n",
       "      <td>146</td>\n",
       "      <td>0.537737</td>\n",
       "      <td>0.394008</td>\n",
       "      <td>3.521668</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1856</th>\n",
       "      <td>2020-06-11</td>\n",
       "      <td>146</td>\n",
       "      <td>0.691387</td>\n",
       "      <td>0.445984</td>\n",
       "      <td>8.693239</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2168</th>\n",
       "      <td>2020-06-23</td>\n",
       "      <td>146</td>\n",
       "      <td>0.796716</td>\n",
       "      <td>0.365722</td>\n",
       "      <td>18.870899</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1258</th>\n",
       "      <td>2020-05-19</td>\n",
       "      <td>146</td>\n",
       "      <td>0.374727</td>\n",
       "      <td>0.239722</td>\n",
       "      <td>2.562795</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>2020-04-09</td>\n",
       "      <td>152</td>\n",
       "      <td>0.876364</td>\n",
       "      <td>0.688125</td>\n",
       "      <td>5.779303</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1128</th>\n",
       "      <td>2020-05-14</td>\n",
       "      <td>146</td>\n",
       "      <td>0.516765</td>\n",
       "      <td>0.402864</td>\n",
       "      <td>9.337795</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1414</th>\n",
       "      <td>2020-05-25</td>\n",
       "      <td>146</td>\n",
       "      <td>0.468028</td>\n",
       "      <td>0.445153</td>\n",
       "      <td>2.777647</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1050</th>\n",
       "      <td>2020-05-11</td>\n",
       "      <td>146</td>\n",
       "      <td>0.449762</td>\n",
       "      <td>0.499780</td>\n",
       "      <td>3.640767</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  location_id   novelty  remoteness   severity  confirmed  \\\n",
       "1648 2020-06-03          146  0.657088    0.297186   3.850024        1.0   \n",
       "1251 2020-05-19          139  0.548224    0.194156   0.483941        1.0   \n",
       "1674 2020-06-04          146  0.537737    0.394008   3.521668        1.0   \n",
       "1856 2020-06-11          146  0.691387    0.445984   8.693239        1.0   \n",
       "2168 2020-06-23          146  0.796716    0.365722  18.870899        3.0   \n",
       "1258 2020-05-19          146  0.374727    0.239722   2.562795        1.0   \n",
       "224  2020-04-09          152  0.876364    0.688125   5.779303        2.0   \n",
       "1128 2020-05-14          146  0.516765    0.402864   9.337795        2.0   \n",
       "1414 2020-05-25          146  0.468028    0.445153   2.777647        1.0   \n",
       "1050 2020-05-11          146  0.449762    0.499780   3.640767        1.0   \n",
       "\n",
       "      count  demo  mass  mob  web  \n",
       "1648    3.0   3.0   0.0  0.0  0.0  \n",
       "1251    3.0   3.0   0.0  2.0  0.0  \n",
       "1674    2.0   2.0   0.0  0.0  0.0  \n",
       "1856    2.0   2.0   0.0  0.0  0.0  \n",
       "2168    5.0   2.0   0.0  0.0  0.0  \n",
       "1258    2.0   2.0   0.0  0.0  0.0  \n",
       "224     2.0   2.0   0.0  0.0  2.0  \n",
       "1128    2.0   2.0   0.0  0.0  0.0  \n",
       "1414    2.0   2.0   0.0  0.0  0.0  \n",
       "1050    3.0   2.0   2.0  0.0  0.0  "
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dffinal.sort_values('demo', ascending = False).head(10)\n",
    "#demo 높은 146, 139, 152만보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location_id</th>\n",
       "      <th>location_name</th>\n",
       "      <th>population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>137</td>\n",
       "      <td>서울특별시 강남구</td>\n",
       "      <td>545938</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     location_id location_name  population\n",
       "133          137     서울특별시 강남구      545938"
      ]
     },
     "execution_count": 166,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_loc[df_loc.location_id ==137]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1b173fd11d0>"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1800x1080 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize = (25,15))\n",
    "ax1 = plt.subplot(331)\n",
    "plt.title(\"demo와 확진자 수와의 관계 : 강북구\", fontsize = 20)\n",
    "ax1.scatter(dffinal[dffinal.location_id == 139].demo, dffinal[dffinal.location_id == 139].confirmed, color = 'blue', label = '강북구', alpha = 0.5)\n",
    "ax2 = plt.subplot(332)\n",
    "plt.title(\"demo와 확진자 수와의 관계 : 도봉구\", fontsize = 20)\n",
    "ax2.scatter(dffinal[dffinal.location_id == 146].demo, dffinal[dffinal.location_id == 146].confirmed, color = 'orange', label = '도봉구', alpha = 0.5)\n",
    "ax3 = plt.subplot(333)\n",
    "plt.title(\"demo와 확진자 수와의 관계 : 성동구\", fontsize = 20)\n",
    "ax3.scatter(dffinal[dffinal.location_id == 152].demo, dffinal[dffinal.location_id == 152].confirmed, color = 'red', label = '성동구', alpha = 0.5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>location_id</th>\n",
       "      <th>novelty</th>\n",
       "      <th>remoteness</th>\n",
       "      <th>severity</th>\n",
       "      <th>confirmed</th>\n",
       "      <th>count</th>\n",
       "      <th>demo</th>\n",
       "      <th>mass</th>\n",
       "      <th>mob</th>\n",
       "      <th>web</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2004</th>\n",
       "      <td>2020-06-17</td>\n",
       "      <td>138</td>\n",
       "      <td>0.390799</td>\n",
       "      <td>0.097228</td>\n",
       "      <td>-5.852348</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>2020-04-03</td>\n",
       "      <td>151</td>\n",
       "      <td>0.139886</td>\n",
       "      <td>0.110234</td>\n",
       "      <td>-4.648011</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1760</th>\n",
       "      <td>2020-06-07</td>\n",
       "      <td>154</td>\n",
       "      <td>0.050849</td>\n",
       "      <td>0.886982</td>\n",
       "      <td>-3.536284</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1742</th>\n",
       "      <td>2020-06-07</td>\n",
       "      <td>136</td>\n",
       "      <td>0.405745</td>\n",
       "      <td>0.887466</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>2020-05-09</td>\n",
       "      <td>137</td>\n",
       "      <td>0.236546</td>\n",
       "      <td>0.085460</td>\n",
       "      <td>-1.038303</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>431</th>\n",
       "      <td>2020-04-17</td>\n",
       "      <td>151</td>\n",
       "      <td>0.478202</td>\n",
       "      <td>0.696496</td>\n",
       "      <td>-6.932338</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1131</th>\n",
       "      <td>2020-05-14</td>\n",
       "      <td>149</td>\n",
       "      <td>0.150658</td>\n",
       "      <td>0.046757</td>\n",
       "      <td>-8.241581</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1468</th>\n",
       "      <td>2020-05-27</td>\n",
       "      <td>148</td>\n",
       "      <td>0.704192</td>\n",
       "      <td>0.236992</td>\n",
       "      <td>-0.303443</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1251</th>\n",
       "      <td>2020-05-19</td>\n",
       "      <td>139</td>\n",
       "      <td>0.548224</td>\n",
       "      <td>0.194156</td>\n",
       "      <td>0.483941</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2058</th>\n",
       "      <td>2020-06-19</td>\n",
       "      <td>140</td>\n",
       "      <td>0.485286</td>\n",
       "      <td>0.165056</td>\n",
       "      <td>6.896030</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  location_id   novelty  remoteness  severity  confirmed  \\\n",
       "2004 2020-06-17          138  0.390799    0.097228 -5.852348        0.0   \n",
       "67   2020-04-03          151  0.139886    0.110234 -4.648011        2.0   \n",
       "1760 2020-06-07          154  0.050849    0.886982 -3.536284        0.0   \n",
       "1742 2020-06-07          136  0.405745    0.887466  0.000000        0.0   \n",
       "989  2020-05-09          137  0.236546    0.085460 -1.038303        1.0   \n",
       "431  2020-04-17          151  0.478202    0.696496 -6.932338        0.0   \n",
       "1131 2020-05-14          149  0.150658    0.046757 -8.241581        0.0   \n",
       "1468 2020-05-27          148  0.704192    0.236992 -0.303443        0.0   \n",
       "1251 2020-05-19          139  0.548224    0.194156  0.483941        1.0   \n",
       "2058 2020-06-19          140  0.485286    0.165056  6.896030        1.0   \n",
       "\n",
       "      count  demo  mass  mob  web  \n",
       "2004    4.0   0.0   0.0  3.0  0.0  \n",
       "67      2.0   0.0   0.0  2.0  0.0  \n",
       "1760    3.0   0.0   0.0  2.0  0.0  \n",
       "1742    2.0   0.0   0.0  2.0  0.0  \n",
       "989     2.0   0.0   0.0  2.0  2.0  \n",
       "431     2.0   0.0   0.0  2.0  0.0  \n",
       "1131    2.0   0.0   0.0  2.0  0.0  \n",
       "1468    4.0   0.0   0.0  2.0  2.0  \n",
       "1251    3.0   3.0   0.0  2.0  0.0  \n",
       "2058    3.0   0.0   0.0  2.0  2.0  "
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dffinal.sort_values('mob', ascending = False).head(10)\n",
    "#mob는 138, 151, 154, 137"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1b1745f36a0>"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x1080 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize = (25,15))\n",
    "ax1 = plt.subplot(331)\n",
    "plt.title(\"mob와 확진자 수와의 관계 : 강동구\", fontsize = 20)\n",
    "ax1.scatter(dffinal[dffinal.location_id == 138].mob, dffinal[dffinal.location_id == 138].confirmed, color = 'blue', label = '강북구', alpha = 0.5)\n",
    "ax2 = plt.subplot(332)\n",
    "plt.title(\"mob와 확진자 수와의 관계 : 서초구\", fontsize = 20)\n",
    "ax2.scatter(dffinal[dffinal.location_id == 151].mob, dffinal[dffinal.location_id == 151].confirmed, color = 'orange', label = '도봉구', alpha = 0.5)\n",
    "ax3 = plt.subplot(333)\n",
    "plt.title(\"mob와 확진자 수와의 관계 : 송파구\", fontsize = 20)\n",
    "ax3.scatter(dffinal[dffinal.location_id == 154].mob, dffinal[dffinal.location_id == 154].confirmed, color = 'red', label = '성동구', alpha = 0.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Regression Analysis\n",
    "- (1) and (2) use fixed-effects panel analysis. (1) includes the number of disaster alerts (variable name: count), while (2) does not.\n",
    "- (3) and (4) use pooled OLS. (3) includes the number of disaster alerts, while (4) does not."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "reg = pd.read_excel('file/reg_table.xlsx')\n",
    "reg.columns = ['dep_var', 'fe_includingcount', 'fe', 'pooled_includingcount', 'pooled']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dep_var</th>\n",
       "      <th>fe_includingcount</th>\n",
       "      <th>fe</th>\n",
       "      <th>pooled_includingcount</th>\n",
       "      <th>pooled</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(1)</td>\n",
       "      <td>(2)</td>\n",
       "      <td>(3)</td>\n",
       "      <td>(4)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>VARIABLES</td>\n",
       "      <td>confirmed</td>\n",
       "      <td>confirmed</td>\n",
       "      <td>confirmed</td>\n",
       "      <td>confirmed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>novelty</td>\n",
       "      <td>0.369***</td>\n",
       "      <td>0.718***</td>\n",
       "      <td>0.331***</td>\n",
       "      <td>0.692***</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.097)</td>\n",
       "      <td>(0.096)</td>\n",
       "      <td>(0.098)</td>\n",
       "      <td>(0.095)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>remoteness</td>\n",
       "      <td>-0.073</td>\n",
       "      <td>0.150</td>\n",
       "      <td>0.011</td>\n",
       "      <td>0.196*</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.103)</td>\n",
       "      <td>(0.104)</td>\n",
       "      <td>(0.100)</td>\n",
       "      <td>(0.102)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>severity</td>\n",
       "      <td>0.066***</td>\n",
       "      <td>0.064***</td>\n",
       "      <td>0.057***</td>\n",
       "      <td>0.053***</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.003)</td>\n",
       "      <td>(0.003)</td>\n",
       "      <td>(0.003)</td>\n",
       "      <td>(0.003)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>demo</td>\n",
       "      <td>0.042</td>\n",
       "      <td>0.235***</td>\n",
       "      <td>0.114*</td>\n",
       "      <td>0.276***</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.064)</td>\n",
       "      <td>(0.064)</td>\n",
       "      <td>(0.060)</td>\n",
       "      <td>(0.060)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>mass</td>\n",
       "      <td>-0.038</td>\n",
       "      <td>0.080</td>\n",
       "      <td>-0.114</td>\n",
       "      <td>0.030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.110)</td>\n",
       "      <td>(0.113)</td>\n",
       "      <td>(0.112)</td>\n",
       "      <td>(0.114)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>mob</td>\n",
       "      <td>-0.358***</td>\n",
       "      <td>-0.081</td>\n",
       "      <td>-0.346***</td>\n",
       "      <td>-0.098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.079)</td>\n",
       "      <td>(0.078)</td>\n",
       "      <td>(0.079)</td>\n",
       "      <td>(0.078)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>web</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.251***</td>\n",
       "      <td>0.085**</td>\n",
       "      <td>0.298***</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.044)</td>\n",
       "      <td>(0.040)</td>\n",
       "      <td>(0.041)</td>\n",
       "      <td>(0.038)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>count</td>\n",
       "      <td>0.445***</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.395***</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.037)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.035)</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Constant</td>\n",
       "      <td>0.065***</td>\n",
       "      <td>0.094***</td>\n",
       "      <td>0.066***</td>\n",
       "      <td>0.088***</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>NaN</td>\n",
       "      <td>(0.017)</td>\n",
       "      <td>(0.017)</td>\n",
       "      <td>(0.017)</td>\n",
       "      <td>(0.017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Observations</td>\n",
       "      <td>2,314</td>\n",
       "      <td>2,314</td>\n",
       "      <td>2,314</td>\n",
       "      <td>2,314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>R-squared</td>\n",
       "      <td>0.410</td>\n",
       "      <td>0.374</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Number of location_id</td>\n",
       "      <td>26</td>\n",
       "      <td>26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Standard errors in parentheses</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>*** p&lt;0.01, ** p&lt;0.05, * p&lt;0.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           dep_var fe_includingcount         fe  \\\n",
       "0                              NaN               (1)        (2)   \n",
       "1                        VARIABLES         confirmed  confirmed   \n",
       "2                              NaN               NaN        NaN   \n",
       "3                          novelty          0.369***   0.718***   \n",
       "4                              NaN           (0.097)    (0.096)   \n",
       "5                       remoteness            -0.073      0.150   \n",
       "6                              NaN           (0.103)    (0.104)   \n",
       "7                         severity          0.066***   0.064***   \n",
       "8                              NaN           (0.003)    (0.003)   \n",
       "9                             demo             0.042   0.235***   \n",
       "10                             NaN           (0.064)    (0.064)   \n",
       "11                            mass            -0.038      0.080   \n",
       "12                             NaN           (0.110)    (0.113)   \n",
       "13                             mob         -0.358***     -0.081   \n",
       "14                             NaN           (0.079)    (0.078)   \n",
       "15                             web             0.003   0.251***   \n",
       "16                             NaN           (0.044)    (0.040)   \n",
       "17                           count          0.445***        NaN   \n",
       "18                             NaN           (0.037)        NaN   \n",
       "19                        Constant          0.065***   0.094***   \n",
       "20                             NaN           (0.017)    (0.017)   \n",
       "21                             NaN               NaN        NaN   \n",
       "22                    Observations             2,314      2,314   \n",
       "23                       R-squared             0.410      0.374   \n",
       "24           Number of location_id                26         26   \n",
       "25  Standard errors in parentheses               NaN        NaN   \n",
       "26  *** p<0.01, ** p<0.05, * p<0.1               NaN        NaN   \n",
       "\n",
       "   pooled_includingcount     pooled  \n",
       "0                    (3)        (4)  \n",
       "1              confirmed  confirmed  \n",
       "2                    NaN        NaN  \n",
       "3               0.331***   0.692***  \n",
       "4                (0.098)    (0.095)  \n",
       "5                  0.011     0.196*  \n",
       "6                (0.100)    (0.102)  \n",
       "7               0.057***   0.053***  \n",
       "8                (0.003)    (0.003)  \n",
       "9                 0.114*   0.276***  \n",
       "10               (0.060)    (0.060)  \n",
       "11                -0.114      0.030  \n",
       "12               (0.112)    (0.114)  \n",
       "13             -0.346***     -0.098  \n",
       "14               (0.079)    (0.078)  \n",
       "15               0.085**   0.298***  \n",
       "16               (0.041)    (0.038)  \n",
       "17              0.395***        NaN  \n",
       "18               (0.035)        NaN  \n",
       "19              0.066***   0.088***  \n",
       "20               (0.017)    (0.017)  \n",
       "21                   NaN        NaN  \n",
       "22                 2,314      2,314  \n",
       "23                 0.414      0.382  \n",
       "24                   NaN        NaN  \n",
       "25                   NaN        NaN  \n",
       "26                   NaN        NaN  "
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
